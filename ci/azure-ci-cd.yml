# Main pipeline spec for CI/CD on Azure Pipelines.

trigger:
  branches:
    include:
    - master
    - rc

jobs:
- job: Linux
  pool:
    vmImage: ubuntu-20.04

  # Deployment creds included unconditionally in this simple workflow; secrets
  # will be withheld in PR builds.
  variables:
  - group: Deployment Credentials
  - name: TOOLCHAIN
    value: stable
  - name: TARGET
    value: x86_64-unknown-linux-gnu

  steps:
  - bash: |
      set -ex
      rustup set profile minimal
      rustup component remove --toolchain=$TOOLCHAIN rust-docs || echo "already removed"
      rustup update --no-self-update $TOOLCHAIN
      rustup default $TOOLCHAIN
      # Log versions for posterity:
      rustup -V
      rustc -Vv
      cargo -V
    displayName: Select Rust toolchain

  - bash: |
      d="$(mktemp --tmpdir -d cranko.XXXXXX)"
      cd "$d"
      curl --proto '=https' --tlsv1.2 -sSf https://pkgw.github.io/cranko/fetch-latest.sh | sh
      echo "##vso[task.prependpath]$d"
    displayName: Install latest Cranko

  - bash: |
      cranko release-workflow apply-versions
    displayName: Apply versions

  - bash: |
      cranko zenodo preregister --metadata=ci/zenodo.json5 rubbl-rxpackage src/main.rs CHANGELOG.md
    displayName: "Preregister Zenodo DOI"
    ${{ if and(eq(variables['Build.SourceBranchName'], 'rc'), ne(variables['build.reason'], 'PullRequest')) }}:
      env:
          ZENODO_TOKEN: $(ZENODO_TOKEN)

  - bash: |
      cargo build --all --release
      cargo test --all --release
    displayName: Build and test

  - bash: |
      set -xeuo pipefail
      git status
      git add .
      cranko release-workflow commit
      git show
    displayName: Generate release commit

  - bash: |
      artifact_dir="$(Build.ArtifactStagingDirectory)/binaries"
      mkdir -p "$artifact_dir"
      cranko cargo package-released-binaries -t $TARGET $artifact_dir -- build --release
    displayName: Package binaries

  - task: PublishPipelineArtifact@1
    displayName: Publish packaged binary artifacts
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/binaries'
      artifactName: binaries

  - ${{ if eq(variables['Build.SourceBranchName'], 'rc') }}:
    - template: azure-deployment.yml
